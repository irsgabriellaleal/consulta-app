// Este é o seu arquivo de schema do Prisma
// Saiba mais sobre ele na documentação: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int           @id @default(autoincrement())
  email           String        @unique
  nome            String
  senha           String?       // Torne a senha opcional
  dataNascimento  DateTime
  criadoEm        DateTime      @default(now())
  atualizadoEm    DateTime      @updatedAt
  agendamentos    Agendamento[]
  emailVerified   DateTime?
  image           String?
  accounts        Account[]
  sessions        Session[]
}

model Agendamento {
  id              Int      @id @default(autoincrement())
  data            DateTime
  horario         String
  especialidade   String
  usuario         User     @relation(fields: [usuarioId], references: [id])
  usuarioId       Int
  criadoEm        DateTime @default(now())
  atualizadoEm    DateTime @updatedAt

  @@index([usuarioId])
}

model Medico {
  id              Int      @id @default(autoincrement())
  nome            String
  especialidade   String
  criadoEm        DateTime @default(now())
  atualizadoEm    DateTime @updatedAt
}

model Account {
  id                 String  @id @default(cuid())
  userId             Int
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       Int      
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
